#!/usr/bin/env bash

# Wait until a remote device is fully up and running.
# 
# See `check_for_ssh` (which is repeatedly called here) for details
#
# Return value:
# 
# 0 if `check_for_ssh` is successful
# 1 if `check_for_ssh` cannot be executed or is unsuccesful on the last retry
# >=124 in case of a timeout waiting for `check_for_ssh` on the last retry
# https://manpages.ubuntu.com/manpages/focal/man1/retry.1.html
# https://man7.org/linux/man-pages/man1/timeout.1.html

usage() {
    echo "Usage: $(basename ${BASH_SOURCE[0]}) [--allow-degraded]"
}

TIMES=20
DELAY=10
while [[ "$#" -gt 0 ]]; do
    case $1 in
        --allow-degraded)
            ALLOW_DEGRADED=$1
            ;;
        --times)
            TIMES=$2
            shift
            ;;
        --delay)
            DELAY=$2
            shift
        *)
            usage
            echo "Error: Invalid argument $1"
            exit 1
            ;;
    esac
    shift
done

CHECK=check_for_ssh
# use `retry` to call `check_for_ssh` repeatedly
retry --times $TIMES --delay $DELAY --message $CHECK -- \
$CHECK $ALLOW_DEGRADED

result=$?
if [ $result -gt 0 ]; then
    echo "Error: unable to complete $(basename ${BASH_SOURCE[0]})"
fi
exit $result
