#!/usr/bin/env bash

# Transfer files from a remote device via SCP.
#
# Description:
#
# The IP of the device is provided by the environment variable DEVICE_IP,
# which must be set. The user name on the remote device is `ubuntu`
# by default, unless provided by the environment variable DEVICE_USER.
#
# The last argument provided is considered to be the "target", i.e. where
# on the local device the file(s) will be copied.
#
# The sources(s) must start with `:`, as is also the case with programs
# like`scp`.
#
# This script sources `defs/set_ssh_options` to set SSH_OPTS.
# This script soures `defs/check_for_device_ip` to check that DEVICE_IP is set.
#
# Return value:
#
# 0 if the copy operation is successful or >0 in case of an error.

usage() {
    echo "Usage: $(basename ${BASH_SOURCE[0]}) [:<source>]+ <target>"
}

if [ $# -lt 2 ]; then
    usage
    echo "Error: <source> and/or <target> not specified"
    exit 1
fi

source "$(dirname ${BASH_SOURCE[0]})/defs/check_for_device_ip"
source "$(dirname ${BASH_SOURCE[0]})/defs/ssh_options"

# The target is the last argument
TARGET=${@: -1}
if [[ ${TARGET:0:1} = ":" ]]; then
    usage
    echo "Error: target '$TARGET' cannot start with a ':' (denotes a remote source)"
    exit 1
fi

# Remove the target from the list by slicing the arguments array
SOURCES_ARRAY=("${@:1:$#-1}")
# Process the list of sources and prefix them appropriately
PREFIX=${DEVICE_USER:-ubuntu}@${DEVICE_IP}
SOURCES=()
for SOURCE in "${SOURCES_ARRAY[@]}"; do
    if [[ ${SOURCE:0:1} != ":" ]]; then
        usage
        echo "Error: source '$SOURCE' does not start with a ':' (denotes a local target)"
        exit 1
    else
        SOURCES+=("${PREFIX}${SOURCE}")
    fi
done
SOURCES="${SOURCES[@]}"

scp $SSH_OPTS $SOURCES $TARGET
