#!/usr/bin/env bash

# Access the SCENARIO_FILE and output the value specified
# by the first argument, e.g. scenario job.artifact.series
#
# If the specified key is not present in the SCENARIO_FILE,
# then the output is "null"
# 
# Return value:
#
# 0 if the specified key is present in the SCENARIO_FILE
# Non-zero otherwise (because of the -e option provided to jq)

usage() {
    echo "Usage: $(basename ${BASH_SOURCE[0]}) [--list] <specifier>"
}

dot_to_brackets() {
    # convert a simple dot-delimited filter like a.b.c
    # to a safer, quoted filter like .["a"]["b"]["c"]
    # by (note the ;):
    # 1. replacing all dots with "]["
    # 2. adding .[" to the beginning (matching ^)
    # 3. adding "] at the end (matching $)
    echo "$1" | sed '
        s/\./"]["/g;
        s/^/.["/;
        s/$/"]/
    '
}

if [ "$1" = "--list" ]; then
    ARG_LIST_FLAG=true
    shift
fi

if [ "$#" -eq 0 ]; then
    usage
    echo "Error: missing specifier"
    exit 1
fi

RESULT=$(jq -r -e $(dot_to_brackets "$1") "$SCENARIO_FILE")
EXIT_CODE="$?"

if [ "$EXIT_CODE" -ne 0 ] || [ -z "$ARG_LIST_FLAG" ]; then
    echo "$RESULT"
else
    echo "$RESULT" | jq -r 'join(" ")'
fi
exit $EXIT_CODE
