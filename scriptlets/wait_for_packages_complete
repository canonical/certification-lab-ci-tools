#!/usr/bin/env bash
#
# Wait until package operations (apt, dpkg) are complete
#
# See `check_for_packages_complete` (which is repeatedly called here)
# for details.
#
# There is a global timeout on the wait operation. In the case
# of a timeout, all processes relevant to package handling (apt,
# apt-get, dpkg) are killed.
#
# Return value:
# 
# 0 if `check_for_packages_complete` is successful
# 1 if `check_for_packages_complete` cannot be executed or is unsuccesful on the last retry
# >=124 in case of a timeout
# https://manpages.ubuntu.com/manpages/focal/man1/retry.1.html
# https://man7.org/linux/man-pages/man1/timeout.1.html

usage() {
    echo "Usage: $(basename $0) [--device]"
}

parse_args() {
    while [[ "$#" -gt 0 ]]; do
        case $1 in
            --device)
                export REMOTE="_run"
                ;;
            *)
                usage
                echo "Error: Invalid argument $1"
                exit 1
                ;;
        esac
        shift
    done
}

assert() {
    CMD=$1
    # make sure that you can execute $CMD (or ./$CMD) on the device
    _run which $CMD
    if [ ! $? -eq 0 ]; then
        CMD="./$CMD"
        _run which $CMD
        if [ ! $? -eq 0 ]; then
            echo "$(basename $CMD) is not present on the device"
            exit 1
        fi
    fi
    export CMD
}

parse_args $@

[ -n "$REMOTE" ] && assert "check_for_packages_complete"

$REMOTE timeout 10m retry --delay 1 -- $CMD

result=$?
if [ $result -ge 124 ]; then
    [ -n "$REMOTE" ] && REMOTE_MESSAGE=" on the device"
    echo "Unable to complete $(basename $0)$REMOTE_MESSAGE. Killing apt, apt-get, and dpkg processes."
    sudo pkill -x "apt|apt-get|dpkg"
fi
exit $result
